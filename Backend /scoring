from typing import Optional, Dict
import logging

logger = logging.getLogger(__name__)

class ESGScoringService:
    DEFAULT_SCORE = 50.0
    
    @staticmethod
    def calculate_weighted_score(
        environmental: Optional[float],
        social: Optional[float],
        governance: Optional[float],
        economic: Optional[float]
    ) -> Dict[str, float]:
        """
        Calculate weighted ESG score with the following weights:
        - Environmental: 40%
        - Social: 25%
        - Governance: 20%
        - Economic: 15%
        """
        try:
            env_score = environmental if environmental is not None else ESGScoringService.DEFAULT_SCORE
            soc_score = social if social is not None else ESGScoringService.DEFAULT_SCORE
            gov_score = governance if governance is not None else ESGScoringService.DEFAULT_SCORE
            econ_score = economic if economic is not None else ESGScoringService.DEFAULT_SCORE
            
            overall_score = (
                0.4 * env_score +
                0.25 * soc_score +
                0.2 * gov_score +
                0.15 * econ_score
            )
            
            return {
                "environmental_score": round(env_score, 2),
                "social_score": round(soc_score, 2),
                "governance_score": round(gov_score, 2),
                "economic_score": round(econ_score, 2),
                "overall_score": round(overall_score, 2)
            }
        except Exception as e:
            logger.error(f"Scoring calculation error: {str(e)}")
            raise
